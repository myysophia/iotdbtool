name: Go Build and Docker Image Push

# 触发条件：当推送到 master 分支或者推送标签时触发
on:
  push:
    branches:
      - "master"
    tags:
      - "*"  # 匹配所有的 tag 推送

env:
  DOCKERHUB_USERNAME: ninesun0318

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Go
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.17'

      # Step 3: Build Go binary
      - name: Build Go binary
        run: |
          mkdir -p bin
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -installsuffix cgo -ldflags "-w" -o bin/wechat-webhook

      # Step 4: Set up QEMU for multi-platform builds
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      # Step 5: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 6: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Step 7: Extract tag from Git reference
      - name: Get tag name
        id: extract_tag
        run: echo "TAG=${GITHUB_REF##*/}" >> $GITHUB_ENV

      # Step 8: Build and push Docker image with tag
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile  # 确保 Dockerfile 在项目根目录
          push: true
          platforms: linux/amd64
          tags: ${{ env.DOCKERHUB_USERNAME }}/wechat-webhook-new:${{ env.TAG }}


#name: Go Build and Docker Image Push
#
#on:
#  push:
#    branches:
#      - "master"
#  pull_request:
#    branches:
#      - "master"
#
#env:
#  DOCKERHUB_USERNAME: ninesun0318
#jobs:
#  build-and-push:
#    runs-on: ubuntu-latest
#
#    steps:
#      # Step 1: Checkout the code from the repository
#      - name: Checkout code
#        uses: actions/checkout@v3
#
#      # Step 2: Set up Go environment
#      - name: Set up Go
#        uses: actions/setup-go@v4
#        with:
#          go-version: '1.17'
#
#      # Step 3: Build Go binary
#      - name: Build Go binary
#        run: |
#          mkdir -p bin
#          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -installsuffix cgo -ldflags "-w" -o bin/wechat-webhook
#
#      # Step 4: Set up QEMU (for multi-platform builds)
#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v2
#
#      # Step 5: Set up Docker Buildx
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#
#      # Step 6: Log in to Docker Hub
#      - name: Log in to Docker Hub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ env.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#
#      # Step 7: Build and push Docker image
#      - name: Build and push Docker image
#        uses: docker/build-push-action@v3
#        with:
#          context: .  # The Docker build context, ensure the Dockerfile and binary are in this directory
#          file: ./Dockerfile  # Path to your Dockerfile
#          push: true
#          platforms: linux/amd64
#          tags: ${{ env.DOCKERHUB_USERNAME }}/wechat-webhook-new:${{ steps.vars.outputs.sha_short }}
#
#      # Optionally, push an image with the short Git SHA as a tag
#      - name: Tag image with Git SHA
#        uses: docker/build-push-action@v3
#        with:
#          context: .
#          file: ./Dockerfile
#          push: true
#          tags: ${{ secrets.DOCKERHUB_USERNAME }}/wechat-webhook:${{ github.sha }}
